---
swagger: "2.0"
info:
  description: "A one-click purchase routing planner"
  version: "1.0.0"
  title: "Find !t API"
host: "w3qv272dkh.execute-api.us-east-1.amazonaws.com"
basePath: "/underdevelopment"
schemes:
- "https"
paths:
  /addToCart:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "query"
        required: true
        type: "string"
      - name: "tcin"
        in: "query"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/SearchResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - cognito_test: []
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /getCart:
    get:
      operationId: "getCart"
      produces:
      - "application/json"
      parameters:
      - name: "userID"
        in: "query"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Cart"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - cognito_test: []
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /history:
    get:
      operationId: "history"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "query"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/HistoryResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - cognito_test: []
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /planRoute:
    get:
      operationId: "planRoute"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "query"
        required: true
        type: "string"
      - name: "lat"
        in: "query"
        required: true
        type: "string"
      - name: "route_option"
        in: "query"
        required: false
        type: "string"
      - name: "lon"
        in: "query"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/RouteResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - cognito_test: []
    post:
      operationId: "route"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "query"
        required: true
        type: "string"
      - name: "lat"
        in: "query"
        required: true
        type: "string"
      - name: "route_option"
        in: "query"
        required: true
        type: "string"
      - name: "lon"
        in: "query"
        required: true
        type: "string"
      - in: "body"
        name: "planRouteRequest"
        required: true
        schema:
          $ref: "#/definitions/planRouteRequest"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/RouteResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - cognito_test: []
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /search:
    get:
      operationId: "searchItem"
      produces:
      - "application/json"
      parameters:
      - name: "itemName"
        in: "query"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/SearchResponse"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
        "500":
          description: "500 response"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "403 response"
          schema:
            $ref: "#/definitions/Error"
      security:
      - cognito_test: []
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
  /startNewSearch:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "query"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
      security:
      - cognito_test: []
    options:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              type: "string"
            Access-Control-Allow-Methods:
              type: "string"
            Access-Control-Allow-Headers:
              type: "string"
securityDefinitions:
  cognito_test:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    x-amazon-apigateway-authtype: "cognito_user_pools"
definitions:
  RoutingResult:
    type: "object"
    properties:
      type:
        type: "string"
      url:
        type: "string"
      unstructured:
        $ref: "#/definitions/RoutingMessage"
  SearchingResult:
    type: "object"
    properties:
      userId:
        type: "string"
      items:
        type: "object"
        properties: {}
      timestamp:
        type: "string"
        format: "datetime"
  HistoryResponse:
    type: "object"
    properties:
      messages:
        type: "array"
        items:
          $ref: "#/definitions/RoutingResult"
  planRouteRequest:
    type: "object"
    properties:
      user_id:
        type: "string"
      route_option:
        type: "string"
      lat:
        type: "number"
      lon:
        type: "number"
  RouteResponse:
    type: "object"
    properties:
      messages:
        type: "array"
        items:
          $ref: "#/definitions/RoutingResult"
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
  RoutingMessage:
    type: "object"
    properties:
      userId:
        type: "string"
      planningType:
        type: "string"
      location:
        type: "string"
      timestamp:
        type: "string"
        format: "datetime"
  Cart:
    type: "object"
    properties:
      userId:
        type: "string"
      itemKeys:
        type: "array"
        items:
          type: "string"
      timestamp:
        type: "string"
        format: "datetime"
  SearchResponse:
    type: "object"
    properties:
      messages:
        type: "array"
        items:
          $ref: "#/definitions/SearchingResult"
